/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import com.mycompany.mavenproject3.mode.*;
import java.awt.Toolkit;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.FlatLightLaf;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author DELL
 */
public class quanlythuvien extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    ArrayList<Sach> sach;
    DefaultTableModel a;
    ArrayList<phieuphat> dsPhieuphat ;
    ArrayList<sinhvien> dsSinhVien;
     ArrayList<Phieumuon> dsPhieumuon;
    public quanlythuvien(ArrayList<Sach> sach, ArrayList<phieuphat> dsPhieuphat, ArrayList<sinhvien> dsSinhVien, ArrayList<Phieumuon> dsPhieumuon) {
        FlatLightLaf.setup();
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/book.png")));
        this.sach = sach;
        this.dsPhieuphat = dsPhieuphat;
        this.dsSinhVien = dsSinhVien;
        this.dsPhieumuon = dsPhieumuon;
        this.setLocationRelativeTo(null);
        // bang sach
        a = (DefaultTableModel) bangsach.getModel();
        int stt = 1;
        for (Sach i : sach) {
            a.addRow(new Object[]{stt, i.getSachID(), i.getTensach(), i.getLoaisach(), i.getGiasach(), i.getTinhtrang(), i.getVitri()});
            stt++;
        }
        // bang phieu phat
        resetbangphieuphat();
        // bang sinh vien
        a = (DefaultTableModel) bangsv.getModel();
        stt = 1;
        for (sinhvien i : dsSinhVien) {
            a.addRow(new Object[]{stt, i.getMSSV(), i.getTensv(), i.getLopquanly(), i.getKhoa(), i.getEmail()});
            stt++;
        }
        // bang phieu muon
        resetbangphieumuon();
        //tu dong tao thang trong thong ke
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM-yyyy");
        int demthang = 0;
        while (demthang < 6) {
            String thanghientai = dateFormat.format(cal.getTime());
            chonthangthongke1.addItem(thanghientai);
            chonthangthongke2.addItem(thanghientai);
            cal.add(Calendar.MONTH, -1);
            demthang++;
        }
    }
    public quanlythuvien(){
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtidsach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txttensach = new javax.swing.JTextField();
        txttheloai = new javax.swing.JTextField();
        btnthemsach = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bangsach = new javax.swing.JTable();
        txtvitri = new javax.swing.JTextField();
        txtgiaban = new javax.swing.JTextField();
        btnsuasach = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        txtTinhTrangSach = new javax.swing.JTextField();
        btntimkiemsach = new javax.swing.JButton();
        btnresetsach = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        bangsv = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtmssv = new javax.swing.JTextField();
        txttensv = new javax.swing.JTextField();
        btntimkiemsv = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtlop = new javax.swing.JTextField();
        txtkhoa = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        btnresetsinhvien = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        btnThemPhieuMuon = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        txtidmuon = new javax.swing.JTextField();
        txtmssvmuon = new javax.swing.JTextField();
        txtidsachmuon = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txthantraphieumuon = new javax.swing.JTextField();
        txtngaymuonphieumuon = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        bangphieumuon = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        cbxttphieumuon = new javax.swing.JCheckBox();
        btnsuaphieumuon = new javax.swing.JButton();
        btntimphieumuon = new javax.swing.JButton();
        txtngaytrasach = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txttensachmuon = new javax.swing.JTextField();
        btnresetphieumuon = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtidphat = new javax.swing.JTextField();
        txtmssvphieuphat = new javax.swing.JTextField();
        txtngayxuphat = new javax.swing.JTextField();
        txtlidoxuphat = new javax.swing.JTextField();
        txthinhthucphat = new javax.swing.JTextField();
        btnthemphieuphat = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        bangphieuphat = new javax.swing.JTable();
        cbxtinhtrangphieuphat = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        btnsuaphieuphat = new javax.swing.JButton();
        btntimkiemphieuphat = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txtidmuonphieuphat = new javax.swing.JTextField();
        btnresetphieuphat = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnthongke = new javax.swing.JButton();
        cbxthongkephieumuonquahantrongthang = new javax.swing.JCheckBox();
        cbxthongkesachmuonnhieunhattrongthang = new javax.swing.JCheckBox();
        chonthangthongke1 = new javax.swing.JComboBox<>();
        chonthangthongke2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý thư viện");
        setResizable(false);

        jLabel1.setText("ID Sách");

        jLabel2.setText("Tên Sách");

        jLabel3.setText("Thể Loại");

        jLabel5.setText("Vị trí");

        jLabel6.setText("Giá Bán ");

        txttheloai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttheloaiActionPerformed(evt);
            }
        });

        btnthemsach.setText("Thêm");
        btnthemsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemsachActionPerformed(evt);
            }
        });

        bangsach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID Sách", "Tên Sách", "Thể Loai", "Giá Bán", "Tình trạng", "Vị trí"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bangsach.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(bangsach);

        btnsuasach.setText("Sửa");
        btnsuasach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuasachActionPerformed(evt);
            }
        });

        jLabel23.setText("Tình trạng");

        txtTinhTrangSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTinhTrangSachActionPerformed(evt);
            }
        });

        btntimkiemsach.setText("Tìm kiếm");
        btntimkiemsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemsachActionPerformed(evt);
            }
        });

        btnresetsach.setText("Reset");
        btnresetsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetsachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnthemsach, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnsuasach, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btntimkiemsach)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnresetsach, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txttensach)
                    .addComponent(txttheloai)
                    .addComponent(txtidsach)
                    .addComponent(txtvitri)
                    .addComponent(txtgiaban)
                    .addComponent(txtTinhTrangSach))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtidsach, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttensach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttheloai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtvitri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtgiaban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(txtTinhTrangSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnsuasach)
                            .addComponent(btnthemsach)
                            .addComponent(btntimkiemsach)
                            .addComponent(btnresetsach))
                        .addGap(0, 71, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sách", jPanel1);

        bangsv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "MSSV", "Tên SV", "Lớp Quản Lí", "Khoa", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bangsv.setColumnSelectionAllowed(true);
        jScrollPane4.setViewportView(bangsv);

        jLabel8.setText("MSSV");

        jLabel9.setText("Tên SV");

        txtmssv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmssvActionPerformed(evt);
            }
        });

        btntimkiemsv.setText("Tìm kiếm");
        btntimkiemsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemsvActionPerformed(evt);
            }
        });

        jLabel10.setText("Lớp");

        jLabel12.setText("Khoa");

        txtlop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlopActionPerformed(evt);
            }
        });

        jLabel18.setText("Email");

        btnresetsinhvien.setText("Reset");
        btnresetsinhvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetsinhvienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btntimkiemsv)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnresetsinhvien))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txttensv)
                            .addComponent(txtmssv)
                            .addComponent(txtlop)
                            .addComponent(txtkhoa, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(txtemail, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmssv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txttensv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtlop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btntimkiemsv)
                            .addComponent(btnresetsinhvien))
                        .addGap(0, 94, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sinh Viên ", jPanel2);

        jLabel22.setText("ID Mượn");

        jLabel25.setText("Mã Sinh Viên");

        btnThemPhieuMuon.setText("Thêm");
        btnThemPhieuMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPhieuMuonActionPerformed(evt);
            }
        });

        jLabel26.setText("ID Sách");

        txtmssvmuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmssvmuonActionPerformed(evt);
            }
        });

        txtidsachmuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidsachmuonActionPerformed(evt);
            }
        });

        jLabel27.setText("Ngày Mượn");

        jLabel21.setText("Hạn Trả");

        txtngaymuonphieumuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtngaymuonphieumuonActionPerformed(evt);
            }
        });

        bangphieumuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID Mượn", "Mã SV", "ID Sách", "Tên Sách", "Ngày Mượn", "Hạn Trả", "Ngày Trả", "Tình Trạng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bangphieumuon.setColumnSelectionAllowed(true);
        jScrollPane8.setViewportView(bangphieumuon);

        jLabel11.setText("Tình Trạng");

        cbxttphieumuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxttphieumuonActionPerformed(evt);
            }
        });

        btnsuaphieumuon.setText("Sửa");
        btnsuaphieumuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaphieumuonActionPerformed(evt);
            }
        });

        btntimphieumuon.setText("Tìm kiếm");
        btntimphieumuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimphieumuonActionPerformed(evt);
            }
        });

        jLabel33.setText("Ngày Trả");

        jLabel29.setText("Tên Sách");

        txttensachmuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttensachmuonActionPerformed(evt);
            }
        });

        btnresetphieumuon.setText("Reset");
        btnresetphieumuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetphieumuonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtidmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtmssvmuon, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                .addComponent(txtidsachmuon)
                                .addComponent(txttensachmuon))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txthantraphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtngaymuonphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxttphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtngaytrasach, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnThemPhieuMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnsuaphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btntimphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnresetphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtidmuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmssvmuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(txtidsachmuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(txttensachmuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(txtngaymuonphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(txthantraphieumuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(txtngaytrasach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxttphieumuon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThemPhieuMuon)
                            .addComponent(btnsuaphieumuon)
                            .addComponent(btntimphieumuon)
                            .addComponent(btnresetphieumuon))
                        .addGap(649, 649, 649))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Mượn Sách", jPanel3);

        jLabel13.setText("ID Phạt");

        jLabel15.setText("MSSV");

        jLabel16.setText("Ngày xử phạt");

        jLabel17.setText("Lí Do Xử Phạt");

        jLabel19.setText("Hình Thức Phạt");

        txtidphat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidphatActionPerformed(evt);
            }
        });

        txtmssvphieuphat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmssvphieuphatActionPerformed(evt);
            }
        });

        btnthemphieuphat.setText("Thêm");
        btnthemphieuphat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemphieuphatActionPerformed(evt);
            }
        });

        bangphieuphat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID Phạt", "ID Mượn", "MSSV", "Ngày xử phạt", "Lí Do Xử Phạt", "Hình Thức Xử Phạt", "Tình Trạng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bangphieuphat.setColumnSelectionAllowed(true);
        jScrollPane7.setViewportView(bangphieuphat);

        jLabel14.setText("Tình trạng");

        btnsuaphieuphat.setText("Sửa");
        btnsuaphieuphat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaphieuphatActionPerformed(evt);
            }
        });

        btntimkiemphieuphat.setText("Tìm kiếm");
        btntimkiemphieuphat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemphieuphatActionPerformed(evt);
            }
        });

        jLabel20.setText("ID mượn");

        txtidmuonphieuphat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidmuonphieuphatActionPerformed(evt);
            }
        });

        btnresetphieuphat.setText("Reset");
        btnresetphieuphat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetphieuphatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxtinhtrangphieuphat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtngayxuphat)
                            .addComponent(txtmssvphieuphat)
                            .addComponent(txtidphat)
                            .addComponent(txthinhthucphat, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtidmuonphieuphat)
                            .addComponent(txtlidoxuphat)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnthemphieuphat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnsuaphieuphat, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btntimkiemphieuphat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnresetphieuphat, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtidphat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtidmuonphieuphat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtmssvphieuphat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtngayxuphat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtlidoxuphat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txthinhthucphat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxtinhtrangphieuphat)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnsuaphieuphat)
                            .addComponent(btnthemphieuphat)
                            .addComponent(btntimkiemphieuphat)
                            .addComponent(btnresetphieuphat))
                        .addGap(0, 41, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Xử Lí Vi Phạm", jPanel6);

        btnthongke.setText("Thống kê");
        btnthongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthongkeActionPerformed(evt);
            }
        });

        cbxthongkephieumuonquahantrongthang.setText("Danh sách những phiếu mượn quá hạn trong tháng ( Bảng phiếu mượn)");
        cbxthongkephieumuonquahantrongthang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxthongkephieumuonquahantrongthangActionPerformed(evt);
            }
        });

        cbxthongkesachmuonnhieunhattrongthang.setText("Danh sách tên những quyển sách được mượn nhiều nhất trong tháng ( Bảng phiếu mượn)");

        chonthangthongke1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chonthangthongke1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnthongke)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbxthongkephieumuonquahantrongthang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxthongkesachmuonnhieunhattrongthang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chonthangthongke2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chonthangthongke1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(439, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxthongkephieumuonquahantrongthang)
                    .addComponent(chonthangthongke1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxthongkesachmuonnhieunhattrongthang)
                    .addComponent(chonthangthongke2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnthongke)
                .addContainerGap(190, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thống kê", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemPhieuMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPhieuMuonActionPerformed
        if (txtidmuon.getText().length() == 0 && txtmssvmuon.getText().length() > 0 && txtidsachmuon.getText().length() > 0 && txttensachmuon.getText().length() == 0
                && txtngaymuonphieumuon.getText().length() == 0 && txthantraphieumuon.getText().length() == 0 && txtngaytrasach.getText().length() == 0 && cbxttphieumuon.isSelected() == false) {
            boolean ktsv = false, kts = false;
            String tensach = "";
            for (sinhvien k : dsSinhVien) {                                                                                                                                   // kiem tra mssv
                if (k.getMSSV().equals(txtmssvmuon.getText())) {
                    ktsv = true;
                    break;
                }
            }
            for (Sach k : sach) {                                                                                                                                                   // kiem tra id sach
                if (k.getSachID().equals(txtidsachmuon.getText())) {
                    kts = true;
                    break;
                }
            }
            for (Phieumuon k : dsPhieumuon) {                                                                                                                                                   // kiem tra id sach
                if (k.getIdsach().equals(txtidsachmuon.getText())&& !k.isTinhtrang()) {
                    kts = false;
                    break;
                }
            }
            if (kts && ktsv) {
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                String ngaymuon = dateFormat.format(cal.getTime());
                cal.add(Calendar.DAY_OF_MONTH, 7);
                String hantra = dateFormat.format(cal.getTime());
                String hauto = String.valueOf(dsPhieumuon.size() + 1);
                while (hauto.length() < 6) {
                    hauto = "0" + hauto;
                }
                String idmuon = LocalDateTime.now().getYear() + hauto;                                                                                 // tao ra id muon
                Phieumuon A = new Phieumuon(idmuon, txtmssvmuon.getText(), txtidsachmuon.getText(), ngaymuon
                        , hantra, "chuatra", false);
                dsPhieumuon.add(A);                                                                                                                                    // them doi tuong sach
                addPhieumuon(A);                                                                                                                                        // cap nhat vao CSDL
                JOptionPane.showMessageDialog(this, "Thêm phiếu mượn thành công!");
                resetbangphieumuon();
            } else {
                JOptionPane.showMessageDialog(this, "MSSV hoặc ID Sách không hợp lệ!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chỉ nhập MSSV, ID Sách( không tích vào tình trạng phiếu mượn) !");
        }
    }//GEN-LAST:event_btnThemPhieuMuonActionPerformed

    private void txtmssvphieuphatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmssvphieuphatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmssvphieuphatActionPerformed

    private void txtidphatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidphatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidphatActionPerformed

    private void btnthemphieuphatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemphieuphatActionPerformed
        // TODO add your handling code here:
        if (txtidphat.getText().length() == 0 && txtidmuonphieuphat.getText().length() > 0 && txtmssvphieuphat.getText().length() == 0 && txtngayxuphat.getText().length() == 0
                && txtlidoxuphat.getText().length() > 0 && txthinhthucphat.getText().length() > 0&& cbxtinhtrangphieuphat.isSelected() == false) {
            boolean ktidmuon = false;
            String mssv="";
            for (Phieumuon k : dsPhieumuon) {                                                                                                                           
                if (k.getIdmuon().equals(txtidmuonphieuphat.getText())) {
                    ktidmuon = true;
                    mssv = k.getMSSV();
                    break;
                }
            }
            if (ktidmuon) {
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                String ngayxuphat = dateFormat.format(cal.getTime());
                String idphat = txtidmuonphieuphat.getText()+"p"+String.valueOf(dsPhieuphat.size()+1);                                                                             
                phieuphat A = new phieuphat(idphat, txtidmuonphieuphat.getText(), mssv, ngayxuphat,txtlidoxuphat.getText() , txthinhthucphat.getText(), false);
                dsPhieuphat.add(A);                                                                                                                                 
                addPhieuphat(A);                                                                                                                                       
                JOptionPane.showMessageDialog(this, "Thêm phiếu phạt thành công!");
                resetbangphieuphat();
            } else {
                JOptionPane.showMessageDialog(this, "ID mượn không hợp lệ!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nhập đủ 3 trường ID mượn, lý do xử phạt, hình thức xử phạt( không tích vào tình trạng phiếu phạt) !");
        }
    }//GEN-LAST:event_btnthemphieuphatActionPerformed

    private void txtidsachmuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidsachmuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidsachmuonActionPerformed

    private void btnsuasachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuasachActionPerformed
        if(txtidsach.getText().length()>0 && txttensach.getText().length()==0 && txttheloai.getText().length()==0 
           && (txtTinhTrangSach.getText().length()>0 || txtvitri.getText().length()>0 || txtgiaban.getText().length()>0 )){
        boolean kt = false;
            for(Sach i : sach){
                if(i.getSachID().equals(txtidsach.getText())){
                    // tim trong bang sach xem co sach nao co id vua nhap khong
                    kt = true;                                                                                                                                                            // neu co chuyen kt = true
                    if(txtgiaban.getText().length()>0)                                                                                                                    // neu nhap gia ban thi sua gia ban
                    {   
                        try{                                                                                                                                                                  // bat loi gia ban khong hop le
                            int giaban = Integer.parseInt(txtgiaban.getText());
                            i.setGiasach(giaban);
                            updateSach(i);
                            JOptionPane.showMessageDialog(this, " Sửa giá bán thành công!");
                        }catch( Exception e){
                            JOptionPane.showMessageDialog(this, " Giá bán nhập vào không hợp lệ!");
                        }                 
                    }
                    if(txtTinhTrangSach.getText().length()>0)
                    {   
                        i.setTinhtrang(txtTinhTrangSach.getText());
                        updateSach(i);
                        JOptionPane.showMessageDialog(this, " Sửa tình trạng thành công!");
                    }
                    if(txtvitri.getText().length()>0)
                    {   
                        i.setVitri(txtvitri.getText());
                        updateSach(i);
                        JOptionPane.showMessageDialog(this, " Sửa vị trí thành công!");
                    }
                    resetbangsach();
                    break;
                }
            }
            if(kt == false){                                                                                                                                                            // neu khong tim thay sach  kt=false
                JOptionPane.showMessageDialog(this, " Không tìm thấy ID sách!");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Vui lòng nhập id sách và thông tin cần sửa ( không thể sửa tên sách, loại sách) !");
        }
    }//GEN-LAST:event_btnsuasachActionPerformed

    private void btnthemsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemsachActionPerformed
        // TODO add your handling code here:
        if(txtidsach.getText().length()==0 && txttensach.getText().length()>0 && txttheloai.getText().length()>0 
           && txtTinhTrangSach.getText().length()>0 && txtvitri.getText().length()>0 && txtgiaban.getText().length()>0 )
        {
            try{
                String hauto = String.valueOf(sach.size()+1);
                while(hauto.length()<4){
                    hauto = "0"+hauto;
                }
                String idsachh = "s" + hauto;                                                                                                                                      // tao ra id sach
                Sach A = new Sach(idsachh,txttheloai.getText(),txttensach.getText(),
                Integer.parseInt(txtgiaban.getText()),txtTinhTrangSach.getText(),txtvitri.getText());                 // tao doi tuong sach
                sach.add(A);                                                                                                                                                                            // them doi tuong sach
                addSach(A);
                JOptionPane.showMessageDialog(this, "Thêm sách thành công!");// cap nhat vao CSDL
                a = (DefaultTableModel)bangsach.getModel();                                                                                                                          // cap nhat vao bang hien thi
                int rows = a.getRowCount();
                for(int i = rows-1;i>=0;i--)
                {
                       a.removeRow(i);            
                }                        
                int stt =1;
                for (Sach i: sach) 
                {
                       a.addRow(new Object[]{stt,i.getSachID(), i.getTensach(), i.getLoaisach(), i.getGiasach(), i.getTinhtrang(), i.getVitri() });
                       stt++;
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Giá bán nhập vào không hợp lệ!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ các trường và để trống id sách!");
        }
    }//GEN-LAST:event_btnthemsachActionPerformed

    private void txttheloaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttheloaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttheloaiActionPerformed

    private void txtmssvmuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmssvmuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmssvmuonActionPerformed

    private void txtngaymuonphieumuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtngaymuonphieumuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtngaymuonphieumuonActionPerformed

    private void cbxttphieumuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxttphieumuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxttphieumuonActionPerformed

    private void btntimkiemsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemsachActionPerformed
        try {
            DefaultTableModel dtm;
            Sach a = new Sach("*", "*", "*", -1, "*", "*");
            dtm = (DefaultTableModel)bangsach.getModel();
            // clear table
            int rows = dtm.getRowCount();
            for(int i = rows-1;i>=0;i--)
            {
                dtm.removeRow(i);
            }
            int condition = 0; // nho nhat la 0, lon nhat bang 6
            int stt = 1;
            // nhan input
            if(txtidsach.getText().length()>0){
                a.setSachID(txtidsach.getText());
                condition++;}
            if(txttensach.getText().length()>0){
                a.setTensach(txttensach.getText());
                condition++;}
            if(txttheloai.getText().length()>0){
                a.setLoaisach(txttheloai.getText());
                condition++;}
            if(txtTinhTrangSach.getText().length()>0){
                a.setTinhtrang(txtTinhTrangSach.getText());
                condition++;}
            if(txtvitri.getText().length()>0){
                a.setVitri(txtvitri.getText());
                condition++;}
            if(txtgiaban.getText().length()>0){
                a.setGiasach(Integer.parseInt(txtgiaban.getText()));
                condition++;}
            if(condition > 0)
            {
                    for(Sach k : sach)
                    {       int conditionPass = 0;
                            if(k.getSachID().contains(a.getSachID()))
                            {
                                conditionPass++;
                            }
                            if(k.getTensach().contains(a.getTensach()))
                            {
                                conditionPass++;
                            }
                            if(k.getLoaisach().contains(a.getLoaisach()))
                            {
                                conditionPass++;
                            }
                            if(k.getGiasach() == (a.getGiasach()))
                            {
                                conditionPass++;
                            }
                            if(k.getTinhtrang().contains(a.getTinhtrang()))
                            {
                                conditionPass++;
                            }
                            if(k.getVitri().contains(a.getVitri()))
                            {
                                conditionPass++;
                            }
                            if(conditionPass == condition)
                            {
                                // them du lieu ra bang
                                dtm.addRow(new Object[]{stt,k.getSachID(), k.getTensach(),k.getLoaisach(), k.getGiasach(), k.getTinhtrang(), k.getVitri() });
                                stt++;
                            }
                    }
                
              }else{
                JOptionPane.showMessageDialog(this, "Nhập ít nhất một trường để tìm kiếm");
                for (Sach i:sach) { 
                dtm.addRow(new Object[]{stt,i.getSachID(), i.getTensach(), i.getLoaisach(), i.getGiasach(), i.getTinhtrang(), i.getVitri() });
                stt++;
        }
            }
        } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Giá bán nhập vào không hợp lệ!");
        }
    }//GEN-LAST:event_btntimkiemsachActionPerformed

    private void btnsuaphieuphatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaphieuphatActionPerformed
        if (txtidphat.getText().length() > 0 && txtidmuonphieuphat.getText().length() == 0 && txtmssvphieuphat.getText().length() == 0 && txtngayxuphat.getText().length() == 0
                && txtlidoxuphat.getText().length() == 0 && txthinhthucphat.getText().length() == 0) {
            boolean ktphat = false;
            for(phieuphat i: dsPhieuphat)
            {
                if(i.getIdphat().equals(txtidphat.getText())){
                    ktphat = true;
                    if(cbxtinhtrangphieuphat.isSelected() && !i.isTinhtrang())
                    {
                        i.setTinhtrang(true);
                        updatePhieuPhat(i);
                        JOptionPane.showMessageDialog(this, "Cập nhật phiếu phạt thành công!");
                        resetbangphieuphat();
                        boolean ktmuon = true;
                        for(phieuphat k : dsPhieuphat){
                            if(k.getIdmuon() == i.getIdmuon() && !k.isTinhtrang())
                            {
                                ktmuon = false;
                                break;
                            }
                        }
                        if(ktmuon){
                            for(Phieumuon k: dsPhieumuon){
                                if(k.getidmuon().equals(i.getIdmuon()))
                                {
                                    k.setTinhtrang(true);
                                    
                                    updatePhieuMuon(k);
                                    JOptionPane.showMessageDialog(this, "Cập nhật phiếu mượn: "+ k.getidmuon()+"  thành công!");
                                    resetbangphieumuon();
                                    break;
                                }
                            }
                        }
                    }
                    break;
                }
            }   
        }
        else{
            JOptionPane.showMessageDialog(this, "Vui lòng chỉ nhập id phạt và tình trạng phiếu phạt cần sửa!");
        }
    }//GEN-LAST:event_btnsuaphieuphatActionPerformed
//dd-mm-yyyy
    public  int[] getdate(String a ){  
        int[] ngaythangnam = new int[3];
        char[] trunggian1 = new char[2];
        a.getChars(0, 2, trunggian1, 0);
        ngaythangnam[0] = Integer.parseInt(String.valueOf(trunggian1));
        char[] trunggian2 = new char[2];
        a.getChars(3, 5, trunggian2, 0);
        ngaythangnam[1] = Integer.parseInt(String.valueOf(trunggian2));
        char[] trunggian3 = new char[4];
        a.getChars(6, 10, trunggian3, 0);
        ngaythangnam[2] = Integer.parseInt(String.valueOf(trunggian3));
        return ngaythangnam;
    }
    private void btnsuaphieumuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaphieumuonActionPerformed
        if(txtidmuon.getText().length()>0 && txtmssvmuon.getText().length()==0 && txtidsachmuon.getText().length()==0  && txttensachmuon.getText().length()==0
           && txtngaymuonphieumuon.getText().length()==0 && txtngaytrasach.getText().length()==0 )
        {
        boolean kt = false;
            for(Phieumuon i : dsPhieumuon){
                if(i.getidmuon().equals(txtidmuon.getText())){                                                                                    // tim trong bang phieu muon xem co phieu nao co id vua nhap khong
                    kt = true;                                                                                                                                                            // neu co chuyen kt = true
                    if(txthantraphieumuon.getText().length()>0 && !i.getHantra().equals(txthantraphieumuon.getText()) && !i.isTinhtrang())                                                                                                 // neu nhap han tra thi sua han tra
                    {   
                        try{
                            boolean kt_date=false;
                            String hantra = txthantraphieumuon.getText();
                            int[] hantramoi = getdate(hantra);
                            Calendar cal = Calendar.getInstance();
                            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                            String homnay = dateFormat.format(cal.getTime());
                            int[] hantracu = getdate(homnay); 
                            if((hantramoi[2]>hantracu[2])||(hantramoi[2]==hantracu[2]&&hantramoi[1]>hantracu[1])){
                                kt_date=true;
                            }
                            else if(hantramoi[2]==hantracu[2] && hantramoi[1]==hantracu[1] &&hantramoi[0]>hantracu[0])
                            {
                                kt_date=true;  
                            }
                            if(kt_date)
                            {
                                i.setHantra(hantra);
                                updatePhieuMuon(i);
                                JOptionPane.showMessageDialog(this, "Cập nhật hạn trả thành công!");
                            }
                            else{
                                JOptionPane.showMessageDialog(this, "Hạn trả nhập vào phải có định dạng dd-mm-yyyy và muộn hơn hôm nay!");
                            }
                        }catch( Exception e){
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Hạn trả nhập vào phải có định dạng dd-mm-yyyy và muộn hơn hôm nay!");
                        }   
                    }
                    if(!i.isTinhtrang() && cbxttphieumuon.isSelected()){
                        i.setTinhtrang(true);
                        Calendar cal = Calendar.getInstance();
                        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                        String homnay = dateFormat.format(cal.getTime());
                        i.setNgaytra(homnay);
                        updatePhieuMuon(i);
                        JOptionPane.showMessageDialog(this, "Cập nhật tình trạng phiếu mượn thành công!");
                    }
                    resetbangphieumuon();
                    break;
                }
            }
            if(kt == false){                                                                                                                                                           
                JOptionPane.showMessageDialog(this, " Không tìm thấy ID Mượn!");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Chỉ sửa được hạn trả và tình trạng mượn ( Bắt buộc nhập ID mượn & hạn trả phải có dạng dd-mm-yyyy)");
        }
    }//GEN-LAST:event_btnsuaphieumuonActionPerformed

    private void txtTinhTrangSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTinhTrangSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTinhTrangSachActionPerformed

    private void btntimkiemsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemsvActionPerformed
        
        sinhvien a = new sinhvien("*", "*", "*", "*", "*");
        DefaultTableModel dtm;
        dtm = (DefaultTableModel) bangsv.getModel();
        // clear table
        int rows = dtm.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        int condition = 0; // nho nhat la 0, lon nhat bang 5
        int stt = 1;
        // nhan input
        if (txtmssv.getText().length() > 0) {
            a.setMSSV(txtmssv.getText());
            condition++;
        }
        if (txttensv.getText().length() > 0) {
            a.setTensv(txttensv.getText());
            condition++;
        }
        if (txtkhoa.getText().length() > 0) {
            a.setKhoa(txtkhoa.getText());
            condition++;
        }
        if (txtlop.getText().length() > 0) {
            a.setLopquanly(txtlop.getText());
            condition++;
        }
        if (txtemail.getText().length() > 0) {
            a.setEmail(txtemail.getText());
            condition++;
        }
        if (condition > 0) {
            for (sinhvien k : dsSinhVien) {
                int conditionPass = 0;
                if (k.getMSSV().contains(a.getMSSV())) {
                    conditionPass++;
                }
                if (k.getTensv().contains(a.getTensv())) {
                    conditionPass++;
                }
                if (k.getLopquanly().contains(a.getLopquanly())) {
                    conditionPass++;
                }
                if (k.getKhoa().contains(a.getKhoa())) {
                    conditionPass++;
                }
                if (k.getEmail().contains(a.getEmail())) {
                    conditionPass++;
                }
                if (conditionPass == condition) {
                    // them du lieu ra bang
                    dtm.addRow(new Object[]{stt, k.getMSSV(), k.getTensv(), k.getLopquanly(), k.getKhoa(), k.getEmail()});
                    stt++;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nhập ít nhất một trường để tìm kiếm");
            for (sinhvien i : dsSinhVien) {
                dtm.addRow(new Object[]{stt, i.getMSSV(), i.getTensv(), i.getLopquanly(), i.getKhoa(), i.getEmail()});
                stt++;
            }
        }
    }//GEN-LAST:event_btntimkiemsvActionPerformed

    private void txtmssvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmssvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmssvActionPerformed

    private void txtlopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlopActionPerformed

    private void btntimphieumuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimphieumuonActionPerformed

        DefaultTableModel dtm;
        Phieumuon a = new Phieumuon("*", "*", "*", "*", "*", "*", cbxttphieumuon.isSelected());
        String tensach = "";
        dtm = (DefaultTableModel) bangphieumuon.getModel();
        // clear table
        int rows = dtm.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        int condition = 1; // nho nhat la 1, lon nhat bang 8
        int stt = 1;
        // nhan input
        if (txtidmuon.getText().length() > 0) {
            a.setidmuon(txtidmuon.getText());
            condition++;
        }
        if (txtmssvmuon.getText().length() > 0) {
            a.setMSSV(txtmssvmuon.getText());
            condition++;
        }
        if (txtidsachmuon.getText().length() > 0) {
            a.setidsach(txtidsachmuon.getText());
            condition++;
        }
        if (txttensachmuon.getText().length() > 0) {
            tensach = txttensachmuon.getText();
            condition++;
        }
        if (txtngaymuonphieumuon.getText().length() > 0) {
            a.setNgaymuon(txtngaymuonphieumuon.getText());
            condition++;
        }
        if (txthantraphieumuon.getText().length() > 0) {
            a.setHantra(txthantraphieumuon.getText());
            condition++;
        }
        if (txtngaytrasach.getText().length() > 0) {
            a.setNgaytra(txtngaytrasach.getText());
            condition++;
        }
        for (Phieumuon k : dsPhieumuon) {
            int conditionPass = 0;
            if (k.getidmuon().contains(a.getidmuon())) {
                conditionPass++;
            }
            if (k.getMSSV().contains(a.getMSSV())) {
                conditionPass++;
            }
            if (k.getIdsach().contains(a.getIdsach())) {
                conditionPass++;
            }
            if (k.getHantra().contains(a.getHantra())) {
                conditionPass++;
            }
            if (k.getNgaymuon().contains(a.getNgaymuon())) {
                conditionPass++;
            }
            if (k.getNgaytra().contains(a.getNgaytra())) {
                conditionPass++;
            }
            String tensachmuon = "";
            for (Sach j : sach) {
                if (j.getSachID().equals(k.getIdsach())) {
                    tensachmuon = j.getTensach();
                    break;
                }
            }
            if (tensach == tensachmuon) {
                conditionPass++;
            }
            if (cbxttphieumuon.isSelected() == k.isTinhtrang()) {
                conditionPass++;
            }
            if (conditionPass == condition) {
                // them du lieu ra bang
                dtm.addRow(new Object[]{stt, k.getidmuon(), k.getMSSV(), k.getidsach(), tensachmuon, k.getNgaymuon(), k.getHantra(), k.getNgaytra(), k.isTinhtrang()});
                stt++;
            }
        }
    }//GEN-LAST:event_btntimphieumuonActionPerformed

    private void txttensachmuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttensachmuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttensachmuonActionPerformed

    private void btnresetphieumuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetphieumuonActionPerformed
        resetbangphieumuon();
    }//GEN-LAST:event_btnresetphieumuonActionPerformed

    private void txtidmuonphieuphatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidmuonphieuphatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidmuonphieuphatActionPerformed

    private void btnresetphieuphatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetphieuphatActionPerformed
        resetbangphieuphat();
    }//GEN-LAST:event_btnresetphieuphatActionPerformed

    private void btntimkiemphieuphatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemphieuphatActionPerformed
        DefaultTableModel dtm;
        phieuphat a = new phieuphat("*", "*", "*", "*", "*", "*", cbxtinhtrangphieuphat.isSelected());
        String tensach = "";
        dtm = (DefaultTableModel) bangphieuphat.getModel();
        int rows = dtm.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        int condition = 1; // nho nhat la 1, lon nhat bang 8
        int stt = 1;
        // nhan input
        if (txtidphat.getText().length() > 0) {
            a.setIdphat(txtidphat.getText());
            condition++;
        }
        if (txtidmuon.getText().length() > 0) {
            a.setIdmuon(txtidmuon.getText());
            condition++;
        }
        if (txtmssvphieuphat.getText().length() > 0) {
            a.setMSSV(txtmssvphieuphat.getText());
            condition++;
        }
        if (txtngayxuphat.getText().length() > 0) {
            a.setNgayxuly(txtngayxuphat.getText());
            condition++;
        }
        if (txtlidoxuphat.getText().length() > 0) {
            a.setLydoxuly(txtlidoxuphat.getText());
            condition++;
        }
        if (txthinhthucphat.getText().length() > 0) {
            a.setHinhthucxuly(txthinhthucphat.getText());
            condition++;
        }
        for (phieuphat k : dsPhieuphat) {
            int conditionPass = 0;
            if (k.getIdphat().contains(a.getIdphat())) {
                conditionPass++;
            }
            if (k.getMSSV().contains(a.getMSSV())) {
                conditionPass++;
            }
            if (k.getIdmuon().contains(a.getIdmuon())) {
                conditionPass++;
            }
            if (k.getNgayxuly().contains(a.getNgayxuly())) {
                conditionPass++;
            }
            if (k.getLydoxuly().contains(a.getLydoxuly())) {
                conditionPass++;
            }
            if (k.getHinhthucxuly().contains(a.getHinhthucxuly())) {
                conditionPass++;
            }
            if (cbxtinhtrangphieuphat.isSelected() == k.isTinhtrang()) {
                conditionPass++;
            }
            if (conditionPass == condition) {
                // them du lieu ra bang
                dtm.addRow(new Object[]{stt, k.getIdphat(), k.getIdmuon(), k.getMSSV(), k.getNgayxuly(), k.getLydoxuly(), k.getHinhthucxuly(), k.isTinhtrang()});
                stt++;
            }
        }
    }//GEN-LAST:event_btntimkiemphieuphatActionPerformed

    private void btnresetsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetsachActionPerformed
        resetbangsach();
    }//GEN-LAST:event_btnresetsachActionPerformed

    private void btnresetsinhvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetsinhvienActionPerformed
        resetbangsinhvien();
    }//GEN-LAST:event_btnresetsinhvienActionPerformed
    public boolean sosanhngay(String ngay1, String ngay2){
        int[] ngaythu1 = getdate(ngay1);
        int[] ngaythu2 = getdate(ngay2);
        boolean ngay1lonhonngay2 = false;
        if ((ngaythu1[2] > ngaythu2[2]) || (ngaythu1[2] == ngaythu2[2] && ngaythu1[1] > ngaythu2[1])) {
            ngay1lonhonngay2 = true;
        } else if (ngaythu1[2] == ngaythu2[2] && ngaythu1[1] == ngaythu2[1] && ngaythu1[0] > ngaythu2[0]) {
            ngay1lonhonngay2 = true;
        }
        return ngay1lonhonngay2;
    }
    private void btnthongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthongkeActionPerformed
        if (cbxthongkephieumuonquahantrongthang.isSelected() && cbxthongkesachmuonnhieunhattrongthang.isSelected()) {
            JOptionPane.showMessageDialog(this, "Chỉ được thống kê mỗi lần một mục!");
        }
        else if (cbxthongkephieumuonquahantrongthang.isSelected() && !cbxthongkesachmuonnhieunhattrongthang.isSelected()) {
            String thangdangxet = chonthangthongke1.getSelectedItem().toString();
            a = (DefaultTableModel) bangphieumuon.getModel();
            int soDong = a.getRowCount(), stt = 1;                                                                                                            // cap nhat lai bang phieu muon
            for (int i = soDong - 1; i >= 0; i--) {
                a.removeRow(i);
            }
            for (Phieumuon k : dsPhieumuon) {
                if (k.getNgaymuon().contains(thangdangxet)) {
                    if (k.getNgaytra().equals("chuatra")) {
                        Calendar cal = Calendar.getInstance();
                        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                        String homnay = dateFormat.format(cal.getTime());
                        if (!sosanhngay(k.getHantra(), homnay)) {
                            String tensach = "";
                            for (Sach j : sach) {
                                if (j.getSachID().equals(k.getIdsach())) {
                                    tensach = j.getTensach();
                                    break;
                                }
                            }
                            a.addRow(new Object[]{stt, k.getidmuon(), k.getMSSV(), k.getidsach(), tensach, k.getNgaymuon(), k.getHantra(), k.getNgaytra(), k.isTinhtrang()});
                            stt++;
                        }
                    } else {
                        if (sosanhngay(k.getNgaytra(), k.getHantra())) {
                            String tensach = "";
                            for (Sach j : sach) {
                                if (j.getSachID().equals(k.getIdsach())) {
                                    tensach = j.getTensach();
                                    break;
                                }
                            }
                            a.addRow(new Object[]{stt, k.getidmuon(), k.getMSSV(), k.getidsach(), tensach, k.getNgaymuon(), k.getHantra(), k.getNgaytra(), k.isTinhtrang()});
                            stt++;
                        }
                    }
                }    
            }
        }
        else if(cbxthongkesachmuonnhieunhattrongthang.isSelected() && !cbxthongkephieumuonquahantrongthang.isSelected()){
            ArrayList<String> tensach = new ArrayList<>();
            for(Sach i: sach){
                boolean kttensach = true;
                for(String j: tensach){
                    if(i.getTensach().equals(j))
                    {
                        kttensach = false;
                        break;
                    }
                }
                if(kttensach){
                    tensach.add(i.getTensach());
                }   
            }
            int[] demtensach = new int[tensach.size()];
            for(int i = 0;i<demtensach.length;i++){
                demtensach[i]=0;
            }
            for(Phieumuon i : dsPhieumuon)
            {
                if(i.getNgaymuon().contains(chonthangthongke2.getSelectedItem().toString()))
                {
                    String tensachhientai="";
                    for(Sach j: sach)
                    {
                        if(j.getSachID().equals(i.getIdsach())){
                            tensachhientai = j.getTensach();
                            break;
                        }
                    }
                    for(int j = 0;j<tensach.size();j++)
                    {
                        if(tensach.get(j).equals(tensachhientai)){
                            demtensach[j]++;
                            break;
                        }
                    }
                }
            }
            a = (DefaultTableModel) bangphieumuon.getModel();
            int soDong = a.getRowCount(), stt = 1;                                                                                                            // cap nhat lai bang phieu muon
            for (int i = soDong - 1; i >= 0; i--) {
                a.removeRow(i);
            }
            int[] trungian = new int[tensach.size()];
            for(int i = 0; i<tensach.size();i++)
            {
                trungian[i] = demtensach[i];
            }
            Arrays.sort(trungian);
            int maxdemtensach = trungian[trungian.length-1];
            
            for(int i = 0;i<tensach.size();i++)
            {
                if (demtensach[i] == maxdemtensach) {
                    for (Phieumuon k : dsPhieumuon) {
                        String ten = "";
                        for (Sach j : sach) {
                            if (j.getSachID().equals(k.getIdsach())) {
                                ten = j.getTensach();
                                break;
                            }
                        }
                        if (ten.equals(tensach.get(i))) {
                            a.addRow(new Object[]{stt, k.getidmuon(), k.getMSSV(), k.getidsach(), ten, k.getNgaymuon(), k.getHantra(), k.getNgaytra(), k.isTinhtrang()});
                            stt++;
                        }
                    }
                }
            }
            

        }
    }//GEN-LAST:event_btnthongkeActionPerformed

    private void chonthangthongke1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chonthangthongke1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chonthangthongke1ActionPerformed

    private void cbxthongkephieumuonquahantrongthangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxthongkephieumuonquahantrongthangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxthongkephieumuonquahantrongthangActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void addSach(Sach a)
    {
        try {
            Connection conn = null;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "INSERT INTO Sach(IDsach,TheLoai,TenSach,GiaSach,TinhTrang, ViTri) VALUES (?,?,?,?,?,?);";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, a.getSachID());
            ps.setString(2, a.getLoaisach());
            ps.setString(3, a.getTensach());
            ps.setInt(4, a.getGiasach());
            ps.setString(5, a.getTinhtrang());
            ps.setString(6, a.getVitri());
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void addSinhvien(sinhvien a)    
    {
        try {
            Connection conn = null;
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "INSERT INTO SinhVien(TenSV,MSSV,Lop_QL,Khoa,Email) VALUES (?,?,?,?,?);";                   
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, a.getTensv());
            ps.setString(2, a.getMSSV());
            ps.setString(3, a.getLopquanly());
            ps.setString(4, a.getKhoa());
            ps.setString(5, a.getEmail());
          
           
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
        
    public void addPhieumuon(Phieumuon a)        
    {
        try {
            Connection conn = null;
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "INSERT INTO Phieumuon(IDMuon,MSSV,IDsach,NgayMuon,HanTra,NgayTra,TinhTrang) VALUES (?,?,?,?,?,?,?);";                   
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, a.getidmuon());
            ps.setString(2, a.getMSSV());
            ps.setString(4, a.getNgaymuon());
            ps.setString(3, a.getidsach());
            ps.setString(5, a.getHantra());
            ps.setString(6, a.getNgaytra());
            ps.setBoolean(7, a.isTinhtrang());
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
            
                
    public void addPhieuphat(phieuphat a)                
    {
        try {
            Connection conn = null;
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "INSERT INTO PhieuPhat(IDPhat,IDMuon,MSSV,NgayXL,LDXL,HTXL,TinhTrang) VALUES (?,?,?,?,?,?,?);";                   
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, a.getIdphat());
            ps.setString(2, a.getIdmuon());
            ps.setString(3, a.getMSSV());
            ps.setString(4, a.getNgayxuly());
            ps.setString(5, a.getLydoxuly());
            ps.setString(6, a.getHinhthucxuly());
           ps.setBoolean(7, a.isTinhtrang());
           
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
                    
    public void updateSach(Sach cus ){                
        try {
            Connection conn = null;
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "UPDATE Sach SET GiaSach=?, TinhTrang=?, Vitri=?  WHERE IDsach=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, cus.getGiasach());
            ps.setString(2, cus.getTinhtrang());
            ps.setString(3, cus.getVitri());
            ps.setString(4, cus.getSachID());
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
                    
    public void updateSinhvien(sinhvien cus ){                
        try {
            Connection conn = null;
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "UPDATE Sinhvien SET TenSV=?, MSSV=?, Lop_QL =?, Khoa=?, Email=?  WHERE  ATMnumber=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, cus.getTensv());
            ps.setString(2, cus.getMSSV());
            ps.setString(3, cus.getLopquanly());
            ps.setString(4, cus.getKhoa());
            ps.setString(5, cus.getEmail());
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void updatePhieuMuon(Phieumuon a)
    {
        try {
            Connection conn = null;
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "UPDATE PhieuMuon SET HanTra=?, NgayTra =?, TinhTrang=?  WHERE  IDMuon=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, a.getHantra());
            ps.setString(2, a.getNgaytra());
            ps.setBoolean(3, a.isTinhtrang());
            ps.setString(4, a.getidmuon());
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void updatePhieuPhat(phieuphat a)
    {
        try {
            Connection conn = null;
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "UPDATE PhieuPhat SET TinhTrang=?  WHERE  IDPhat=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setBoolean(1, a.isTinhtrang());
            ps.setString(2, a.getIdphat());
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void removeSach(Sach A ){                
        try {
            Connection conn = null;
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-8RTP8V7:1433;databaseName =ThuVien2;user = sa;password = 123456789;encrypt = false");
            String sql = "DELETE FROM Sach WHERE IDsach=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, A.getSachID());
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void resetbangsach() {
        a = (DefaultTableModel) bangsach.getModel();
        int soDong = a.getRowCount(), stt = 1;
        for (int k = soDong - 1; k >= 0; k--) // xoa bang
        {
            a.removeRow(k);
        }
        for (Sach k : sach) {                                                                                                                                               // in ra bang moi sau khi sua
            a.addRow(new Object[]{
                stt, k.getSachID(), k.getTensach(), k.getLoaisach(), k.getGiasach(), k.getTinhtrang(), k.getVitri()});
            stt++;
        }
    }
    public void resetbangsinhvien(){
        DefaultTableModel dtm;
        dtm = (DefaultTableModel) bangsv.getModel();
        // clear table
        int rows = dtm.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        int stt = 1;
        for (sinhvien i : dsSinhVien) {
            dtm.addRow(new Object[]{stt, i.getMSSV(), i.getTensv(), i.getLopquanly(), i.getKhoa(), i.getEmail()});
            stt++;
        }
    }
    public void resetbangphieumuon() {
        a = (DefaultTableModel) bangphieumuon.getModel();
        int soDong = a.getRowCount(), stt = 1;                                                                                                            // cap nhat lai bang phieu muon
        for (int i = soDong - 1; i >= 0; i--) {
            a.removeRow(i);
        }
        for (Phieumuon k : dsPhieumuon) {
            String tensach = "";
            for (Sach j : sach) {
                if (j.getSachID().equals(k.getIdsach())) {
                    tensach = j.getTensach();
                    break;
                }
            }
            a.addRow(new Object[]{stt, k.getidmuon(), k.getMSSV(), k.getidsach(), tensach, k.getNgaymuon(), k.getHantra(), k.getNgaytra(), k.isTinhtrang()});
            stt++;
        }
    }
    public void resetbangphieuphat() {
        a = (DefaultTableModel) bangphieuphat.getModel();
        int rows = a.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            a.removeRow(i);
        }
        int stt = 1;
        for (phieuphat i : dsPhieuphat) {
            a.addRow(new Object[]{stt, i.getIdphat(), i.getIdmuon(), i.getMSSV(), i.getNgayxuly(), i.getLydoxuly(), i.getHinhthucxuly(), i.isTinhtrang()});
            stt++;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bangphieumuon;
    private javax.swing.JTable bangphieuphat;
    private javax.swing.JTable bangsach;
    private javax.swing.JTable bangsv;
    private javax.swing.JButton btnThemPhieuMuon;
    private javax.swing.JButton btnresetphieumuon;
    private javax.swing.JButton btnresetphieuphat;
    private javax.swing.JButton btnresetsach;
    private javax.swing.JButton btnresetsinhvien;
    private javax.swing.JButton btnsuaphieumuon;
    private javax.swing.JButton btnsuaphieuphat;
    private javax.swing.JButton btnsuasach;
    private javax.swing.JButton btnthemphieuphat;
    private javax.swing.JButton btnthemsach;
    private javax.swing.JButton btnthongke;
    private javax.swing.JButton btntimkiemphieuphat;
    private javax.swing.JButton btntimkiemsach;
    private javax.swing.JButton btntimkiemsv;
    private javax.swing.JButton btntimphieumuon;
    private javax.swing.JCheckBox cbxthongkephieumuonquahantrongthang;
    private javax.swing.JCheckBox cbxthongkesachmuonnhieunhattrongthang;
    private javax.swing.JCheckBox cbxtinhtrangphieuphat;
    private javax.swing.JCheckBox cbxttphieumuon;
    private javax.swing.JComboBox<String> chonthangthongke1;
    private javax.swing.JComboBox<String> chonthangthongke2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtTinhTrangSach;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtgiaban;
    private javax.swing.JTextField txthantraphieumuon;
    private javax.swing.JTextField txthinhthucphat;
    private javax.swing.JTextField txtidmuon;
    private javax.swing.JTextField txtidmuonphieuphat;
    private javax.swing.JTextField txtidphat;
    private javax.swing.JTextField txtidsach;
    private javax.swing.JTextField txtidsachmuon;
    private javax.swing.JTextField txtkhoa;
    private javax.swing.JTextField txtlidoxuphat;
    private javax.swing.JTextField txtlop;
    private javax.swing.JTextField txtmssv;
    private javax.swing.JTextField txtmssvmuon;
    private javax.swing.JTextField txtmssvphieuphat;
    private javax.swing.JTextField txtngaymuonphieumuon;
    private javax.swing.JTextField txtngaytrasach;
    private javax.swing.JTextField txtngayxuphat;
    private javax.swing.JTextField txttensach;
    private javax.swing.JTextField txttensachmuon;
    private javax.swing.JTextField txttensv;
    private javax.swing.JTextField txttheloai;
    private javax.swing.JTextField txtvitri;
    // End of variables declaration//GEN-END:variables
}
